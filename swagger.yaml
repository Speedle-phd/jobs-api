openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://temp-jobs-api-6rxq.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: createUser
      operationId: createUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/createUserRequest'
              - example:
                  name: Ono
                  email: ono@panda.de
                  password: waffles
            example:
              name: Ono
              email: ono@panda.de
              password: waffles
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: loginUser
      operationId: loginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginUserRequest'
              - example:
                  email: bobo@owl.de
                  password: lotworms
            example:
              email: bobo@owl.de
              password: lotworms
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /job:
    post:
      tags:
      - Jobs
      summary: createJob
      operationId: createJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/createJobRequest'
              - example:
                  company: waffleCompany
                  position: CEO
            example:
              company: waffleCompany
              position: CEO
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: getAllJobs
      operationId: getAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /job/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job ID
    get:
      tags:
      - Jobs
      summary: getJob
      operationId: getJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: New Request
      operationId: NewRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewRequestRequest'
              - example:
                  status: interview
            example:
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: New Request
      operationId: DeleteNewRequest
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    createUserRequest:
      title: createUserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Ono
        email: ono@panda.de
        password: waffles
    loginUserRequest:
      title: loginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: bobo@owl.de
        password: lotworms
    createJobRequest:
      title: createJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: waffleCompany
        position: CEO
    NewRequestRequest:
      title: NewRequestRequest
      required:
      - status
      type: object
      properties:
        status:
          type: string
      example:
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''
